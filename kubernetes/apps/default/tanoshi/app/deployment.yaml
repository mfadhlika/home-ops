apiVersion: apps/v1
kind: Deployment
metadata:
  name: tanoshi
  labels: &labels
    app.kubernetes.io/part-of: tanoshi
    app.kubernetes.io/name: tanoshi
    app.kubernetes.io/component: server
spec:
  replicas: 1
  revisionHistoryLimit: 0
  serviceName: "tanoshi"
  selector:
    matchLabels:
      <<: *labels
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: tanoshi-data
        - name: share
          hostPath:
            path: /mnt/storage
            type: Directory
        - name: config
          configMap:
            name: tanoshi-config
        - name: secret
          secret:
            secretName: tanoshi-secret
      containers:
        - name: tanoshi
          image: faldez/tanoshi:0.30.0
          imagePullPolicy: IfNotPresent
          env:
            - name: TANOSHI_HOME
              value: /data
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 60
          volumeMounts:
            - name: secret
              mountPath: /var/secret
              readOnly: true
            - name: data
              mountPath: /data
            - name: share
              mountPath: /manga
              subPath: books/manga
            - name: share
              mountPath: /cache
              subPath: apps/tanoshi/cache
          ports:
            - containerPort: 80
              name: http
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - cp /var/secret/config.yml /data/config.yml
